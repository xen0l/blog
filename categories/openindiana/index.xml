<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenIndiana on xenol&#39;s blog</title>
    <link>https://blog.xenol.eu/categories/OpenIndiana/</link>
    <description>Recent content in OpenIndiana on xenol&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Feb 2017 21:35:37 +0100</lastBuildDate><atom:link href="https://blog.xenol.eu/categories/OpenIndiana/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managing more illumos networking with Ansible</title>
      <link>https://blog.xenol.eu/blog/2017/02/11/Managing-more-illumos-networking-with-Ansible/</link>
      <pubDate>Sat, 11 Feb 2017 21:35:37 +0100</pubDate>
      
      <guid>https://blog.xenol.eu/blog/2017/02/11/Managing-more-illumos-networking-with-Ansible/</guid>
      <description>On January 9th, the rest of my work on Ansible modules for managing Solaris/illumos networking was accepted into Ansible and this work will be a part of the next release. With this batch of modules almost every aspect of Solaris/illumos networking (apart from link aggregations and bridges) can be configured and managed by Ansible. The following new modules are available in Ansible:
 dladm_vlan dladm_linkprop dladm_iptun ipadm_addr ipadm_addrprop ipadm_ifprop  In the next blog post I will show some real examples how to accomplish useful work with these modules.</description>
    </item>
    
    <item>
      <title>Managing illumos networking with Ansible</title>
      <link>https://blog.xenol.eu/blog/2016/09/03/Managing-illumos-networking-with-Ansible/</link>
      <pubDate>Sat, 03 Sep 2016 12:10:21 +0200</pubDate>
      
      <guid>https://blog.xenol.eu/blog/2016/09/03/Managing-illumos-networking-with-Ansible/</guid>
      <description>On August 30th, my work on Ansible modules for managing Solaris/illumos networking was merged into ansible-modules-extras repository. This functionality will be available in the next release of Ansible. Following modules were contributed:
 dladm_etherstub dladm_vnic ipadm_if ipadm_prop flowadm  This also marks a major milestone for automating the deployment of Solaris/illumos zones with Ansible. There already was a module for creating/deleting zones and manipulating their state - solaris_zone. However, there was not a way to manage the networking aspect of zones until now.</description>
    </item>
    
    <item>
      <title>Mirroring OpenIndiana IPS repositories - part 1</title>
      <link>https://blog.xenol.eu/blog/2016/08/09/Mirroring-OpenIndiana-IPS-repositories-part-1/</link>
      <pubDate>Tue, 09 Aug 2016 00:09:28 +0200</pubDate>
      
      <guid>https://blog.xenol.eu/blog/2016/08/09/Mirroring-OpenIndiana-IPS-repositories-part-1/</guid>
      <description>Introduction In this blog post, I will show how one can create a mirror of OpenIndiana IPS repositories. IPS repositories hold packages coming from multiple sources, most notably from illumos-gate and oi-userland. Every time user runs pkg update on his OpenIndiana installation, pkg contacts IPS repository to fetch catalog metadata and determines if there are any new updates available. If updates are available, pkg downoalds only changed files over HTTP. IPS application server is written in Python and CherryPy web framework.</description>
    </item>
    
    <item>
      <title>OpenIndiana involvement</title>
      <link>https://blog.xenol.eu/2012/02/11/openindiana-involvement/</link>
      <pubDate>Sat, 11 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.xenol.eu/2012/02/11/openindiana-involvement/</guid>
      <description>I have been watching OpenSolaris development for a long time. As a technology fan, I really like all the cool features OpenSolaris offers: ZFS filesystem capabilities, service management with SMF, dynamic tracing and application debugging with DTrace, container-based virtualization with Solaris zones, network virtualization with Crossbow, safe system upgrades and downtime minimalization via Boot Environments and integratiom of all these features together makes it perfect operating system for a server. However, OpenSolaris is dead and it continues to live as OpenIndiana, which is a Illumos-based derivate.</description>
    </item>
    
  </channel>
</rss>
